name: Continuous Integration


on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request_target:


jobs:

  ### NOTE:
  ###
  ### GitHub dependabot cannot access secrets unless workflows are triggered on
  ### the `pull_request_target` event or "workflows from fork PRs" are allowed (insecure).
  ###
  ### Discussion: https://github.community/t/dependabot-doesnt-see-github-actions-secrets/167104
  ### Reference: https://github.com/dependabot/dependabot-core/issues/3253#issuecomment-797125425
  ###
  check:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')
    steps:
    - name: "Print message"
      run: echo "Valid conditions for the workflow to start"

  lint:
    needs: [check]
    runs-on: ubuntu-latest
    steps:
    - name: "Set up GitHub Actions"
      uses: actions/checkout@v2
    - name: "Set up Python 3.7"
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: "Set up private packages SSH keys"
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: |
          ${{ secrets.DM_CORE_SSH_KEY }}
          ${{ secrets.DM_SCHEMAS_SSH_KEY }}
    - name: "Install Python dependencies"
      run: |
        pip install --no-cache-dir --upgrade pip setuptools wheel
        pip install --no-cache-dir --requirement reqs/requirements-prod.txt
        pip install --no-cache-dir --requirement reqs/requirements-lint.txt
        pip list
    - name: "Check code format"
      run: |
        make check

#  ONLY POSSIBLE WHEN PROJECT GOES PUBLIC
#
#  build:
#    needs: [lint]
#    runs-on: ubuntu-latest
#    steps:
#    - name: "Set up GitHub Actions"
#      uses: actions/checkout@v2
#    - name: "Set up private packages SSH keys"
#      uses: webfactory/ssh-agent@v0.5.3
#      with:
#        ssh-private-key: |
#          ${{ secrets.DM_CORE_SSH_KEY }}
#          ${{ secrets.DM_SCHEMAS_SSH_KEY }}
#    - name: "Build Docker image"
#      run: |
#        make build
